@model Spice.Models.ShoppingCart
@using Spice.Extensions
@using System.Globalization
@using Spice.Utility

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //For image, which is hosted on the web server we need only to provide path to the image. For image from DB we need to convert byte[] to Base64String

    //Convertion byteArray -> String understanded by HTML
    String imgSrc = null;

    if (!(Model.MenuItem.Image is null) && Model.MenuItem.Image.Count() > 0)
    {
        imgSrc = String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(Model.MenuItem.Image));
    }

}

<br />
<h2 class="text-info">Details of Menu Item</h2>
<br />


@* Becouse We have image, image is fetch to the controler *@
<form method="post" asp-action="Details">
    <div class="background-white border row">
        <input type="hidden" asp-for="MenuItemId" />
        <div asp-validation-summary="ModelOnly" class="text-danger" />

        <div class="col-12 pb-4 d-md-none">
            <img src="@imgSrc" width="100%" style="border-radius:5px; border: 1px solid #bbb9b9" alt="MenuItemImage" />
        </div>

        <div class="col-md-8">

            <div class="form-group row">
                <div class="col-md-4">
                    <label asp-for="MenuItem.Name" class="text-info font-weight-bold"></label>
                </div>
                <div class="col-md-8">
                    <input asp-for="MenuItem.Name" readonly class="read-only-background form-control" />
                </div>
                @*<span asp-validation-for="MenuItem.Name" class="text-danger" />*@
            </div>

            <div class="form-group row">
                <div class="col-md-4">
                    <label asp-for="MenuItem.Description" class="text-info font-weight-bold"></label>
                </div>
                <div class="col-md-8">
                    <div class="border p-2">
                        @Html.Raw(Model.MenuItem.Description)
                    </div>
                </div>
                @*<span asp-validation-for="MenuItem.Description" class="text-danger" />*@
            </div>
            <div class="form-group row">
                <div class="col-md-4">
                    <label asp-for="MenuItem.Price" class="text-info font-weight-bold"></label><span class="text-info font-weight-bold"> in @SD.DefaultCultureInfo.IetfLanguageTag.ToString().Split("-")[1] @SD.DefaultCultureInfo.NumberFormat.CurrencySymbol</span>
                </div>
                <div class="col-md-8">
                    <input asp-for="MenuItem.Price" readonly class="read-only-background form-control" />
                </div>
                @*<span asp-validation-for="MenuItem.Price" class="text-danger" />*@
            </div>

            @*<div class="form-group row">
                <div class="col-4">
                    <label asp-for="MenuItem.Image" class="text-info font-weight-bold"></label>
                </div>
                <div class="col-8">
                    <input type="file" name="files" multiple class="form-control" />
                </div>
            </div>*@

            <div class="form-group row">
                <div class="col-md-4">
                    <label asp-for="@Model.MenuItem.CategoryId" class="text-info font-weight-bold"></label>
                </div>
                <div class="col-md-8">
                    <input asp-for="MenuItem.Category.Name" readonly id="CategoryId" class="read-only-background form-control"/>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-4">
                    <label asp-for="MenuItem.SubCategoryId" class="text-info font-weight-bold"></label>
                </div>
                <div class="col-md-8">
                    @*Populate with JavaScript, firstly empty dropdrown*@
                    <input asp-for="MenuItem.SubCategory.Name" readonly name="SubCategoryId" id="SubCategoryId" class="read-only-background form-control"/>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-4">
                    <label asp-for="MenuItem.Spicyness" class="text-info font-weight-bold"></label>
                </div>
                <div class="col-md-8">
                    <select asp-for="MenuItem.Spicyness" readonly asp-items="@Html.GetEnumSelectList<MenuItem.ESpicy>()" class="read-only-background form-control"></select>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-4">
                    <label asp-for="Count" class="text-info font-weight-bold"></label>
                </div>
                <div class="col-md-8">
                    <input asp-for="Count" class="form-control"/>
                </div>
                <span asp-validation-for="Count" class="text-danger" />
            </div>

            <div class="form-group row">
                <div class="col-md-4">
                </div>
                <div class="col-md-4 pb-sm-1 pb-md-0">
                    <a asp-action="Index" class="btn btn-success form-control">Back to the List</a>
                </div>
                <div class="col-md-4">
                    <button type="submit" value="Add to the Cart" class="btn btn-primary form-control">Add to the Cart</button>
                </div>
            </div>

        </div>

        @* DO not display the image, display when it is md size or bigger *@
        <div class="col-3 offset-1 d-none d-md-block">
            <img src="@imgSrc" width="100%" style="border-radius:5px; border: 1px solid #bbb9b9" alt="MenuItemImage" />
        </div>



        @*<div class="col-8">
            <div class="col-8 offset-4">
                <partial name="_DetailsAndBackToTheListButtonPartial" model="@Model.MenuItem.Id" />
            </div>
        </div>*@


    </div>
</form>


@section Scripts
{
  
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}

