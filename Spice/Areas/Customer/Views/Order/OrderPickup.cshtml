@model Spice.Models.ViewModels.OrderListViewModel
@*@model List<Spice.Models.ViewModels.OrderDetailsViewModel>*@

@{
    ViewData["Title"] = "Order Pickup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2 class="text-info">Orders Ready for Pickup :</h2>

<form method="post">
    <div class="border background-white">
        <div class="container border border-secondary w-100">
            <div class="row container">
                <div class="col-11">
                    <div class="row p-3">
                        <div class="col-4">
                            @Html.Editor("searchName", new { htmlAttributes = new { @class = "form-control", @placeholder = "Name..." } })
                        </div>
                        <div class="col-4">
                            @Html.Editor("searchPhone", new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone..." } })
                        </div>
                        <div class="col-4">
                            @Html.Editor("searchEmail", new { htmlAttributes = new { @class = "form-control", @placeholder = "Email..." } })
                        </div>
                    </div>
                </div>
                <div class="col-1">
                    <div class="row p-3">
                        <button type="submit" name="submit" value="Search" class="btn btn-info form-control">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="">
            @if (Model.Orders.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            @Html.DisplayNameFor(m => m.Orders.FirstOrDefault().OrderHeader.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders.FirstOrDefault().OrderHeader.PickupName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders.FirstOrDefault().OrderHeader.User.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders.FirstOrDefault().OrderHeader.PickupTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders.FirstOrDefault().OrderHeader.OrderTotalDiscount)
                        </th>
                        <th>
                            Total items
                        </th>
                        @*<th></th>*@
                        <th></th>

                        <th></th>

                    </tr>
                    @foreach (var item in Model.Orders)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.PickupName)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.User.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.PickupTime)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.OrderTotalDiscount)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderDetails.Count)
                            </td>
                            <td class="">
                                <button type="submit" class="btn btn-sm btn-success anchor-detail" asp-action="GetOrderDetails" data-Id="@item.OrderHeader.Id" data-toggle="modal">
                                    <i class="far fa-list-alt"></i> Details
                                </button>
                            </td>

                        </tr>
                    }
                </table>
                <div page-model="@Model.PagingInfo"
                     page-classes-enable="true"
                     page-class="btn border"
                     page-class-normal="btn btn-light"
                     page-class-selected="btn btn-info active"
                     class="btn-group float-right">

                </div>
                <br />
            }
            else
            {
                <br />
                <p>There isn't existing categories yet :(</p>
            }

        </div>

    </div>

    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog-centered modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-success text-light justify-content-center">
                    <h5 class="modal-title">Order Details</h5>
                </div>
                <div class="modal-body justify-content-center" id="myModalContent">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary w-25" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="myModalDetails" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog-centered modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-success text-light justify-content-center">
                    <h5 class="modal-title">Order Status</h5>
                </div>
                <div class="modal-body justify-content-center" id="myModalContentDetails">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary w-25" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

</form>

@section Scripts{
    <script>
        var postBackUrl = '/Customer/Order/GetOrderDetails';
        $(function () {
            $('.anchor-detail').click(function () {

                //our object
                var $buttonClicked = $(this);

                //get id of button
                var id = $buttonClicked.attr('data-id');

                //ajax call to action method
                $.ajax({
                    type: "GET",
                    url: postBackUrl,
                    // contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    dataType: "html",
                    //if success we want to call function
                    success: function (data) {
                        //pass data
                        $('#myModalContent').html(data);
                        //make wisible
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed :(");
                    }
                });

            });
            //------Order Status Modal-------------------------------------------------------------------
            $('.anchor-detail-status').click(function () {

                var $buttonClicked = $(this);
                var status = $buttonClicked.attr('data-status');

                $.ajax({
                    type: "GET",
                    url: "/Customer/Order/GetOrderStatusChart",
                    // contentType: "application/json; charset=utf-8",
                    data: { "status": status },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContentDetails').html(data);
                        $('#myModalDetails').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed :(");
                    }
                });

            });

        });
    </script>
}